@model PaginatedList<ParentContactWeb.models.Contact>

@{
    ViewData["Title"] = "Index";
}

<h1>Parent Contact Tracker</h1>

<p>
    <a asp-action="Create">Create New Contact</a>
</p>

<form asp-controller="Students" asp-action="Index">
    <div class="form-actions no-color">

        <p>
            Find by name: <input type="text" name="searchTerm">
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>

</form>
<table class="table table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th>
                Contact Reason
            </th>
            <th>
                Talking Points
            </th>
            <th>
                Parent Comments
            </th>
            <th>
                FollowUp Needed?
            </th>
            <th>
                ContactStatus
            </th>
            <th>
                Contact Method
            </th>
            <th>
                Contact Date
            </th>
            <th>
                Parent
            </th>
            <th>
                Student
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactReason)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TalkingPoints)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ParentComments)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FollowUpNeeded)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactStatus)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactMethod)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactDate)
                </td>
                <td>
                    @{
                        var parentname = item.Parent.FamilyName + "," + item.Parent.FirstName;
                        @Html.DisplayFor(modelItem => parentname )


                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Student.FirstName)
                </td>
                <td>
                    <a class="btn btn-primary" asp-action="Edit" asp-route-id="@item.ContactId">Edit</a> |
                    <a class="btn btn-primary" asp-action="Details" asp-route-id="@item.ContactId">Details</a> |
                    <a class="btn btn-primary" asp-action="Delete" asp-route-id="@item.ContactId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   class="btn btn-secondary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   class="btn btn-secondary @nextDisabled">
    Next
</a>


